from django.db import models
import api.models.constant as const
from api.models.Team import Team
from api.helpers.create_unique_id import create_unique_id
import uuid

"""
User model object

Required fields:
    first_name
    last_name
    email
    password

Optional fields:
    position
    user_role
    values_scores
"""
class User(models.Model):

    # team id (required)
    team = models.ForeignKey(
        Team, 
        on_delete = models.SET_NULL, 
        null = True, 
        blank = False
    )

    # user id (required, autogenerated)
    uid = models.CharField(
        primary_key=True,
        max_length=const.ID_LEN,
        default=create_unique_id(len=const.ID_LEN),
        auto_created=True,
        unique=True,
        editable=False,
    )


    # first name (required)
    first_name = models.CharField(
        max_length = const.CHARFIELD_SHORT_LEN, 
        blank = False
    )

    # last name (required)
    last_name = models.CharField(
        max_length = const.CHARFIELD_SHORT_LEN, 
        blank = False
    )

    # email (required)
    email = models.CharField(
        max_length = const.CHARFIELD_SHORT_LEN,
        null=True,
        blank = False
    )

    # password (required)
    password = models.CharField(
        max_length=const.CHARFIELD_LONG_LEN, 
        null=True,
        blank=False
    )

    # user role ('manager', 'employee', 'dev')
    # default = 'employee'
    user_role = models.CharField(
        max_length = const.CHARFIELD_SHORT_LEN, 
        choices = [
            ("emp", "employee"),
            ("mng", "manager"),
            ("dev", "developer")
        ],
        default='employee'
    )

    # date user account was created
    start_date = models.DateField(
        auto_now_add=True,
        auto_created=True,
        null = True
    )

    # scores on corporate values
    values_scores = models.JSONField(
        null = True
    )
    
    class Meta:
        verbose_name = "User"
